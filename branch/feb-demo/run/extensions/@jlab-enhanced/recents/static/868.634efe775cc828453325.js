"use strict";(self.webpackChunk_jlab_enhanced_recents=self.webpackChunk_jlab_enhanced_recents||[]).push([[868],{868:(e,t,n)=>{n.r(t),n.d(t,{IRecents:()=>u,default:()=>y});var s,a=n(101),i=n(712),c=n(87),r=n(616),o=n(411),l=n(526),h=n(992),d=n(524),p=n(625),m=n(840);!function(e){e.recents="jupyterlab-recents",e.contrib="@jlab-enhanced/recents"}(s||(s={}));const u=new l.Token(`${s.recents}:IRecents`);var g,_,R;!function(e){e.recents=`${s.recents}:recents`}(g||(g={})),function(e){e.openRecent=`${s.recents}:open-recent`,e.clearRecents=`${s.recents}:clear-recents`}(_||(_={})),function(e){e.mergePaths=function(e,t){return e.endsWith("/")&&(e=e.slice(0,-1)),t.endsWith("/")&&(t=t.slice(1)),`${e}/${t}`}}(R||(R={}));class v{constructor(e,t){this._recentsChanged=new m.Signal(this),this._recents=[],this._awaitingSaveCompletion=!1,this._isDisposed=!1,this._poll=null,this._maxRecentsLength=10,this._serverRoot=d.PageConfig.getOption("serverRoot"),this._stateDB=e,this._contentsManager=t,this.loadRecents().catch((e=>{console.error(`Failed to load recent list from state:\n${e}`)}))}get isDisposed(){return this._isDisposed}get recents(){return(this._recents||[]).filter((e=>e.root===this._serverRoot))}get recentsChanged(){return this._recentsChanged}get maximalRecentsLength(){return this._maxRecentsLength}set maximalRecentsLength(e){this._maxRecentsLength=Math.round(Math.max(1,e)),this._recents.length>this._maxRecentsLength&&(this._recents.length=this._maxRecentsLength,this._recentsChanged.emit(this._recents))}dispose(){var e;this.isDisposed||(this._isDisposed=!0,null===(e=this._poll)||void 0===e||e.dispose(),m.Signal.clearData(this))}isPolling(){return null!==this._poll}addRecent(e,t){const n={root:this._serverRoot,path:e,contentType:t},s=this.recents,a=s.findIndex((t=>t.path===e));a>=0&&s.splice(a,1),s.unshift(n),this.setRecents(s)}clearRecents(){this.recents.length=0}removeRecents(...e){const t=this.recents,n=t.filter((t=>-1===e.indexOf(t.path)));t.length!==n.length&&this.setRecents(n)}async validate(){this._poll?(await this._poll.refresh(),await this._poll.tick):this.removeRecents(...await this.getInvalidRecents())}setPollInterval(e){var t;e<=0?(null===(t=this._poll)||void 0===t||t.dispose(),this._poll=null):this._poll?this._poll.frequency={interval:1e3*e,backoff:!0,max:Math.max(3e5,5*e*1e3)}:this._poll=new p.Poll({auto:!0,factory:async()=>{this.removeRecents(...await this.getInvalidRecents())},frequency:{interval:1e3*e,backoff:!0,max:Math.max(3e5,5*e*1e3)},name:`${s.recents}:recents`,standby:"when-hidden"})}setRecents(e){this._recents=e.slice(0,this.maximalRecentsLength).sort(((e,t)=>e.root===t.root?0:e.root!==this._serverRoot?1:-1)),this.saveRecents(),this._recentsChanged.emit(this.recents)}async getInvalidRecents(e){const t=null!=e?e:this.recents;return(await Promise.all(t.map((async e=>{try{return await this._contentsManager.get(e.path,{content:!1}),null}catch(t){if(404===t.response.status)return e.path}})))).filter((e=>null!==e))}async loadRecents(){const e=await this._stateDB.fetch(g.recents)||[],t=await this.getInvalidRecents(e);this.setRecents(e.filter((e=>!t.includes(e.path))))}saveRecents(){clearTimeout(this._saveRoutine),this._saveRoutine=setTimeout((async()=>{if(this._awaitingSaveCompletion)this.saveRecents();else{this._awaitingSaveCompletion=!0;try{await this._stateDB.save(g.recents,this._recents),this._awaitingSaveCompletion=!1}catch(e){this._awaitingSaveCompletion=!1,console.log("Saving recents failed"),this.saveRecents()}}}),500)}}class f extends h.Menu{constructor(e){super(e),this._manager=e.manager,this._manager.recentsChanged.connect(this.updateItems,this)}onBeforeAttach(e){if(!this._manager.isPolling()){const e=new l.PromiseDelegate;setTimeout((()=>{e.reject("Recents validation timed out.")}),150),Promise.race([e.promise,this._manager.validate()]).then((()=>{this.update()})).catch((()=>{}))}super.onBeforeAttach(e)}updateItems(){this.clearItems();let e=!0;this._manager.recents.sort(((e,t)=>e.contentType===t.contentType?0:"directory"!==e.contentType?1:-1)).forEach((t=>{e&&"directory"!==t.contentType&&(e=!1,this.addItem({type:"separator"})),this.addItem({command:_.openRecent,args:{recent:t}})})),this.addItem({type:"separator"}),this.addItem({command:_.clearRecents})}}const y={id:`${s.recents}:plugin`,autoStart:!0,requires:[r.IStateDB,i.IMainMenu,a.IDocumentManager],optional:[c.ISettingRegistry,o.ITranslator],provides:u,activate:(e,t,n,a,i,c)=>{const{commands:r,serviceManager:l}=e,h=(null!=c?c:o.nullTranslator).load("jupyterlab-recents");r.addCommand(_.openRecent,{execute:async e=>{const t=e.recent,n=""===t.path?"/":t.path;await r.execute("filebrowser:open-path",{path:n}),await d.validate()},label:e=>{const t=e.recent;return R.mergePaths(t.root,t.path)},isVisible:e=>d.recents.includes(e.recent)}),r.addCommand(_.clearRecents,{execute:()=>{d.clearRecents()},label:h.__("Clear Recents"),caption:h.__("Clear the list of recently opened items.")});const d=new v(t,l.contents),p=e=>{d.maximalRecentsLength=e.get("length").composite,d.setPollInterval(e.get("pollFrequency").composite)};Promise.all([e.restored,i.load(`${s.contrib}:plugin`)]).then((([e,t])=>{t.changed.connect(p),p(t)})),a.activateRequested.connect((async(t,n)=>{const s=await a.services.contents.get(n,{content:!1}),i=e.docRegistry.getFileTypeForModel(s).contentType;if(d.addRecent(n,i),"directory"!==i){const e=n.lastIndexOf("/")>0?n.slice(0,n.lastIndexOf("/")):"";d.addRecent(e,"directory")}}));const m=new f({commands:r,manager:d});return m.title.label=h.__("Recents"),n.fileMenu.addGroup([{type:"submenu",submenu:m}],1),d}}}}]);