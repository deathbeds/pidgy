{"version":3,"file":"450.456a1ef519c6cf962c6a.js?v=456a1ef519c6cf962c6a","mappings":"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","sources":["webpack://@deathbeds/jupyterlab-deck/./src/tools/layover.ts"],"sourcesContent":["import type { GlobalStyles } from '@deathbeds/jupyterlab-fonts/lib/_schema';\nimport { VDomModel } from '@jupyterlab/apputils';\nimport { JSONExt } from '@lumino/coreutils';\nimport { Widget } from '@lumino/widgets';\nimport { drag, D3DragEvent } from 'd3-drag';\nimport * as d3 from 'd3-selection';\n\nimport { IDeckManager, CSS, DATA } from '../tokens';\n\n/** An interactive layer positioner. */\nexport class Layover extends Widget {\n  protected _model: Layover.Model;\n  protected _d3: typeof d3 | null = null;\n  protected _drag: typeof drag | null = null;\n\n  constructor(options: Layover.IOptions) {\n    super(options);\n    this.addClass(CSS.layover);\n    this._model = new Layover.Model();\n    document.body.appendChild(this.node);\n    this.model.stateChanged.connect(this.render, this);\n    window.addEventListener('resize', this.render);\n    document.body.dataset[DATA.layoutMode] = DATA.designing;\n    this.render();\n  }\n\n  dispose(): void {\n    /* istanbul ignore if */\n    if (this.isDisposed) {\n      return;\n    }\n    this.model.dispose();\n    const { node } = this;\n    super.dispose();\n    document.body.removeChild(node);\n    window.removeEventListener('resize', this.render);\n    delete document.body.dataset[DATA.layoutMode];\n  }\n\n  render = () => {\n    const boxes = d3\n      .select(this.node)\n      .selectAll(`.${CSS.layoverPart}`)\n      .data(this.model.partData, Layover.getPartKey as any)\n      .join('div')\n      .classed(CSS.layoverPart, true)\n      .style('left', ({ bounds }) => `${bounds.left}px`)\n      .style('top', ({ bounds }) => `${bounds.top}px`)\n      .style('height', ({ bounds }) => `${bounds.height}px`)\n      .style('width', ({ bounds }) => `${bounds.width}px`)\n      .call(Layover.boxDrag as any);\n\n    boxes\n      .selectAll(`.${CSS.layoverPartLabel}`)\n      .data((d, i) => [i])\n      .join('div')\n      .classed(CSS.layoverPartLabel, true)\n      .text((d) => d + 1);\n\n    boxes\n      .selectAll(`.${CSS.layoverHandle}`)\n      .data(Layover.handleData)\n      .join('div')\n      .attr('class', Layover.getHandleClass)\n      .classed(CSS.layoverHandle, true)\n      .call(Layover.handleDrag.container(this.node) as any);\n\n    boxes\n      .selectAll(`.${CSS.layoverUnstyle}`)\n      .data(Layover.resetData)\n      .join('button')\n      .classed(CSS.layoverUnstyle, true)\n      .text('â†º')\n      .on('click', Layover.onReset as any);\n  };\n\n  get model() {\n    return this._model;\n  }\n}\n\nexport namespace Layover {\n  export interface IOptions extends Widget.IOptions {\n    manager: IDeckManager;\n  }\n  export class Model extends VDomModel {\n    private _parts: BasePart[] = [];\n\n    get partData() {\n      return this._parts.map(this._partDatum);\n    }\n\n    get parts() {\n      return this._parts;\n    }\n\n    set parts(parts: BasePart[]) {\n      this._parts = parts;\n      this.stateChanged.emit(void 0);\n    }\n\n    protected _partDatum = (part: BasePart) => {\n      const { left, top, width, height } = part.node.getBoundingClientRect();\n      let zoom = parseFloat(\n        window.getComputedStyle(part.node).getPropertyValue('zoom') || '1.0'\n      );\n      return {\n        ...part,\n        bounds: {\n          left: left * zoom,\n          top: top * zoom,\n          width: width * zoom,\n          height: height * zoom,\n        },\n      };\n    };\n  }\n  export interface DOMRectLike {\n    top: number;\n    left: number;\n    width: number;\n    height: number;\n  }\n  export interface BasePart {\n    key: string;\n    node: HTMLElement;\n    getStyles(): GlobalStyles | null;\n    setStyles(styles: GlobalStyles | null): void;\n  }\n  export interface Part extends BasePart {\n    bounds: DOMRectLike;\n  }\n\n  function setStyles(d: Layover.Part) {\n    const { bounds } = d;\n\n    const { innerWidth, innerHeight } = window;\n\n    d.setStyles({\n      ...(d.getStyles() || JSONExt.emptyObject),\n      position: 'fixed',\n      left: `${100 * (bounds.left / innerWidth)}%`,\n      top: `${100 * (bounds.top / innerHeight)}%`,\n      width: `${100 * (bounds.width / innerWidth)}%`,\n      height: `${100 * (bounds.height / innerHeight)}%`,\n    });\n  }\n\n  export function resetData(d: Part) {\n    let style = d.getStyles();\n    return style && style.position === 'fixed' ? [d] : [];\n  }\n\n  export function onReset(event: PointerEvent, d: Layover.Part) {\n    let styles = d.getStyles() || JSONExt.emptyObject;\n    d.setStyles({\n      ...styles,\n      position: null as any,\n      left: null as any,\n      top: null as any,\n      width: null as any,\n      height: null as any,\n    });\n  }\n\n  export function getPartKey(d: Part) {\n    return d.key;\n  }\n\n  export function getHandleClass(h: PartHandle) {\n    return `${CSS.layoverHandle}-${h.handle}`;\n  }\n\n  function onBoxDragStart(this: HTMLDivElement, event: TPartDrag, d: Layover.Part) {\n    d3.select(this).classed(CSS.dragging, true);\n  }\n\n  function onBoxDrag(this: HTMLDivElement, event: TPartDrag, d: Layover.Part) {\n    d.bounds.left += event.dx;\n    d.bounds.top += event.dy;\n    d3.select(this)\n      .style('left', `${d.bounds.left}px`)\n      .style('top', `${d.bounds.top}px`);\n  }\n\n  function onBoxDragEnd(this: HTMLDivElement, event: TPartDrag, d: Layover.Part) {\n    d3.select(this).classed(CSS.dragging, false);\n    setStyles(d);\n  }\n\n  export const boxDrag = drag<HTMLDivElement, Layover.Part>()\n    .on('start', onBoxDragStart)\n    .on('drag', onBoxDrag)\n    .on('end', onBoxDragEnd);\n\n  function onHandleDragStart(\n    this: HTMLDivElement,\n    event: TPartDrag,\n    d: Layover.PartHandle\n  ) {\n    d3.select(this.parentElement).classed(CSS.dragging, true);\n  }\n\n  function onHandleDrag(this: HTMLDivElement, event: TPartDrag, d: Layover.PartHandle) {\n    let { dx, dy } = event;\n    let { bounds } = d.part;\n    let h = d.handle;\n\n    if (h.includes('n')) {\n      bounds.top += dy;\n      bounds.height -= dy;\n    } else if (h.includes('s')) {\n      bounds.height += dy;\n    }\n    if (h.includes('w')) {\n      bounds.left += dx;\n      bounds.width -= dx;\n    } else if (h.includes('e')) {\n      bounds.width += dx;\n    }\n\n    d3.select(this.parentElement)\n      .style('left', `${bounds.left}px`)\n      .style('top', `${bounds.top}px`)\n      .style('height', `${bounds.height}px`)\n      .style('width', `${bounds.width}px`);\n  }\n\n  function onHandleDragEnd(\n    this: HTMLDivElement,\n    event: TPartDrag,\n    d: Layover.PartHandle\n  ) {\n    d3.select(this.parentElement).classed(CSS.dragging, false);\n    setStyles(d.part);\n  }\n\n  export const handleDrag = drag<HTMLDivElement, Layover.PartHandle>()\n    .on('start', onHandleDragStart)\n    .on('drag', onHandleDrag)\n    .on('end', onHandleDragEnd);\n\n  export interface PartHandle {\n    part: Part;\n    handle: THandle;\n  }\n  export function handleData(part: Part) {\n    let handleData: PartHandle[] = [];\n    for (const handle of HANDLES) {\n      handleData.push({ part, handle });\n    }\n    return handleData;\n  }\n\n  const HANDLES = ['nw', 'n', 'ne', 'w', 'e', 'sw', 's', 'se'] as const;\n\n  type THandle = typeof HANDLES[number];\n\n  type TPartDrag = D3DragEvent<HTMLDivElement, Layover.Part, Layover.Part>;\n}\n"],"names":["Layover","Widget","constructor","options","super","_d3","_drag","render","boxes","this","node","selectAll","data","model","partData","getPartKey","join","classed","style","bounds","left","top","height","width","call","boxDrag","d","i","text","handleData","attr","getHandleClass","handleDrag","container","resetData","on","onReset","addClass","_model","Model","document","body","appendChild","stateChanged","connect","window","addEventListener","dataset","dispose","isDisposed","removeChild","removeEventListener","VDomModel","_parts","_partDatum","part","getBoundingClientRect","zoom","parseFloat","getComputedStyle","getPropertyValue","map","parts","emit","setStyles","innerWidth","innerHeight","getStyles","JSONExt","position","event","styles","key","h","handle","drag","dx","dy","parentElement","includes","HANDLES","push"],"sourceRoot":""}