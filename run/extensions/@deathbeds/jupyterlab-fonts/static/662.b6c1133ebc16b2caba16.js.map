{"version":3,"file":"662.b6c1133ebc16b2caba16.js?v=b6c1133ebc16b2caba16","mappings":"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","sources":["webpack://@deathbeds/jupyterlab-fonts/./style/editor.css","webpack://@deathbeds/jupyterlab-fonts/./style/index.css","webpack://@deathbeds/jupyterlab-fonts/./style/license.css","webpack://@deathbeds/jupyterlab-fonts/./src/button.ts","webpack://@deathbeds/jupyterlab-fonts/./style/icons/copyright.svg","webpack://@deathbeds/jupyterlab-fonts/./src/icons.ts","webpack://@deathbeds/jupyterlab-fonts/./style/icons/fonts.svg","webpack://@deathbeds/jupyterlab-fonts/./style/license.css?d500","webpack://@deathbeds/jupyterlab-fonts/./src/license.tsx","webpack://@deathbeds/jupyterlab-fonts/./src/manager.ts","webpack://@deathbeds/jupyterlab-fonts/./style/editor.css?d282","webpack://@deathbeds/jupyterlab-fonts/./src/editor.ts","webpack://@deathbeds/jupyterlab-fonts/./style/index.css?f019","webpack://@deathbeds/jupyterlab-fonts/./src/plugin.ts","webpack://@deathbeds/jupyterlab-fonts/./src/stylist.ts","webpack://@deathbeds/jupyterlab-fonts/./src/tokens.ts","webpack://@deathbeds/jupyterlab-fonts/./src/util.ts"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".jp-FontsEditor {\\n  color: var(--jp-ui-font-color0);\\n  overflow-y: auto;\\n  background-color: var(--jp-layout-color1);\\n}\\n\\n.jp-FontsEditor-button.jp-mod-styled {\\n  font-size: var(--jp-ui-font-size1);\\n  background-color: var(--jp-layout-color0);\\n  border: solid 1px transparent;\\n  white-space: nowrap;\\n  flex: 0;\\n}\\n\\n.jp-FontsEditor .lm-CommandPalette-header {\\n  margin: 0;\\n}\\n\\n.jp-FontsEditor-enable label {\\n  margin: calc(var(--jp-ui-font-size1) / 2) 0 0 var(--jp-ui-font-size1);\\n  font-size: var(--jp-ui-font-size1);\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n}\\n\\n.jp-FontsEditor-button.jp-mod-styled:focus,\\n.jp-FontsEditor-button.jp-mod-styled:hover {\\n  border-color: var(--jp-border-color1);\\n}\\n\\n.jp-FontsEditor h2 {\\n  padding: var(--jp-ui-font-size1);\\n  margin: 0;\\n  display: flex;\\n}\\n\\n.jp-FontsEditor h2 > label {\\n  flex: 1;\\n}\\n\\n.jp-FontsEditor-delete-icon.jp-FontsEditor-button.jp-mod-styled {\\n  background-repeat: no-repeat;\\n  background-position: center;\\n  color: transparent;\\n}\\n\\n.jp-FontsEditor h2 .jp-NotebookIcon {\\n  width: var(--jp-ui-font-size2);\\n  height: calc(var(--jp-ui-font-size2));\\n  display: inline-block;\\n  vertical-align: middle;\\n  background-repeat: no-repeat;\\n}\\n\\n.jp-FontsEditor-embed {\\n  padding: 0;\\n  margin: 0;\\n}\\n\\n.jp-FontsEditor-embed li {\\n  display: flex;\\n  flex-direction: row;\\n  list-style: none;\\n  align-items: baseline;\\n  justify-content: space-between;\\n  margin: 0 var(--jp-ui-font-size1);\\n}\\n\\n.jp-FontsEditor-embed li > * {\\n  flex: 1;\\n  font-size: var(--jp-ui-font-size1);\\n}\\n\\n.jp-FontsEditor-embed li > .jp-FontsEditor-size {\\n  flex: 0;\\n  padding: 0 var(--jp-ui-font-size1);\\n  font-size: var(--jp-ui-font-size0);\\n  color: var(--jp-ui-font-color2);\\n  white-space: nowrap;\\n}\\n\\n.jp-FontsEditor-field {\\n  display: flex;\\n  margin: 0 var(--jp-ui-font-size1);\\n  align-items: baseline;\\n}\\n\\n.jp-FontsEditor-field label {\\n  white-space: nowrap;\\n  flex: 0;\\n  font-size: var(--jp-ui-font-size1);\\n  padding-right: var(--jp-ui-font-size1);\\n}\\n\\n.jp-FontsEditor-field > div {\\n  display: flex;\\n  flex: 1;\\n  flex-direction: row;\\n  align-items: baseline;\\n}\\n.jp-FontsEditor-field > div * {\\n  display: block;\\n  flex: 1;\\n  text-align: right;\\n  font-size: var(--jp-ui-font-size1);\\n}\\n\\n.jp-FontsEditor-field select {\\n  font-weight: bold;\\n  border: none;\\n  background: transparent;\\n  background-image: var(--jp-ui-select-caret);\\n  background-repeat: no-repeat;\\n  background-position: 99% center;\\n  background-size: 18px;\\n  text-align: right;\\n  text-align-last: right;\\n  margin-left: var(--jp-notebook-padding);\\n  padding-right: calc(2 * var(--jp-notebook-padding));\\n}\\n\\n.jp-FontsEditor option {\\n  text-align: right;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./style/editor.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,+BAA+B;EAC/B,gBAAgB;EAChB,yCAAyC;AAC3C;;AAEA;EACE,kCAAkC;EAClC,yCAAyC;EACzC,6BAA6B;EAC7B,mBAAmB;EACnB,OAAO;AACT;;AAEA;EACE,SAAS;AACX;;AAEA;EACE,qEAAqE;EACrE,kCAAkC;EAClC,aAAa;EACb,mBAAmB;EACnB,mBAAmB;AACrB;;AAEA;;EAEE,qCAAqC;AACvC;;AAEA;EACE,gCAAgC;EAChC,SAAS;EACT,aAAa;AACf;;AAEA;EACE,OAAO;AACT;;AAEA;EACE,4BAA4B;EAC5B,2BAA2B;EAC3B,kBAAkB;AACpB;;AAEA;EACE,8BAA8B;EAC9B,qCAAqC;EACrC,qBAAqB;EACrB,sBAAsB;EACtB,4BAA4B;AAC9B;;AAEA;EACE,UAAU;EACV,SAAS;AACX;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,gBAAgB;EAChB,qBAAqB;EACrB,8BAA8B;EAC9B,iCAAiC;AACnC;;AAEA;EACE,OAAO;EACP,kCAAkC;AACpC;;AAEA;EACE,OAAO;EACP,kCAAkC;EAClC,kCAAkC;EAClC,+BAA+B;EAC/B,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,iCAAiC;EACjC,qBAAqB;AACvB;;AAEA;EACE,mBAAmB;EACnB,OAAO;EACP,kCAAkC;EAClC,sCAAsC;AACxC;;AAEA;EACE,aAAa;EACb,OAAO;EACP,mBAAmB;EACnB,qBAAqB;AACvB;AACA;EACE,cAAc;EACd,OAAO;EACP,iBAAiB;EACjB,kCAAkC;AACpC;;AAEA;EACE,iBAAiB;EACjB,YAAY;EACZ,uBAAuB;EACvB,2CAA2C;EAC3C,4BAA4B;EAC5B,+BAA+B;EAC/B,qBAAqB;EACrB,iBAAiB;EACjB,sBAAsB;EACtB,uCAAuC;EACvC,mDAAmD;AACrD;;AAEA;EACE,iBAAiB;AACnB\",\"sourcesContent\":[\".jp-FontsEditor {\\n  color: var(--jp-ui-font-color0);\\n  overflow-y: auto;\\n  background-color: var(--jp-layout-color1);\\n}\\n\\n.jp-FontsEditor-button.jp-mod-styled {\\n  font-size: var(--jp-ui-font-size1);\\n  background-color: var(--jp-layout-color0);\\n  border: solid 1px transparent;\\n  white-space: nowrap;\\n  flex: 0;\\n}\\n\\n.jp-FontsEditor .lm-CommandPalette-header {\\n  margin: 0;\\n}\\n\\n.jp-FontsEditor-enable label {\\n  margin: calc(var(--jp-ui-font-size1) / 2) 0 0 var(--jp-ui-font-size1);\\n  font-size: var(--jp-ui-font-size1);\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n}\\n\\n.jp-FontsEditor-button.jp-mod-styled:focus,\\n.jp-FontsEditor-button.jp-mod-styled:hover {\\n  border-color: var(--jp-border-color1);\\n}\\n\\n.jp-FontsEditor h2 {\\n  padding: var(--jp-ui-font-size1);\\n  margin: 0;\\n  display: flex;\\n}\\n\\n.jp-FontsEditor h2 > label {\\n  flex: 1;\\n}\\n\\n.jp-FontsEditor-delete-icon.jp-FontsEditor-button.jp-mod-styled {\\n  background-repeat: no-repeat;\\n  background-position: center;\\n  color: transparent;\\n}\\n\\n.jp-FontsEditor h2 .jp-NotebookIcon {\\n  width: var(--jp-ui-font-size2);\\n  height: calc(var(--jp-ui-font-size2));\\n  display: inline-block;\\n  vertical-align: middle;\\n  background-repeat: no-repeat;\\n}\\n\\n.jp-FontsEditor-embed {\\n  padding: 0;\\n  margin: 0;\\n}\\n\\n.jp-FontsEditor-embed li {\\n  display: flex;\\n  flex-direction: row;\\n  list-style: none;\\n  align-items: baseline;\\n  justify-content: space-between;\\n  margin: 0 var(--jp-ui-font-size1);\\n}\\n\\n.jp-FontsEditor-embed li > * {\\n  flex: 1;\\n  font-size: var(--jp-ui-font-size1);\\n}\\n\\n.jp-FontsEditor-embed li > .jp-FontsEditor-size {\\n  flex: 0;\\n  padding: 0 var(--jp-ui-font-size1);\\n  font-size: var(--jp-ui-font-size0);\\n  color: var(--jp-ui-font-color2);\\n  white-space: nowrap;\\n}\\n\\n.jp-FontsEditor-field {\\n  display: flex;\\n  margin: 0 var(--jp-ui-font-size1);\\n  align-items: baseline;\\n}\\n\\n.jp-FontsEditor-field label {\\n  white-space: nowrap;\\n  flex: 0;\\n  font-size: var(--jp-ui-font-size1);\\n  padding-right: var(--jp-ui-font-size1);\\n}\\n\\n.jp-FontsEditor-field > div {\\n  display: flex;\\n  flex: 1;\\n  flex-direction: row;\\n  align-items: baseline;\\n}\\n.jp-FontsEditor-field > div * {\\n  display: block;\\n  flex: 1;\\n  text-align: right;\\n  font-size: var(--jp-ui-font-size1);\\n}\\n\\n.jp-FontsEditor-field select {\\n  font-weight: bold;\\n  border: none;\\n  background: transparent;\\n  background-image: var(--jp-ui-select-caret);\\n  background-repeat: no-repeat;\\n  background-position: 99% center;\\n  background-size: 18px;\\n  text-align: right;\\n  text-align-last: right;\\n  margin-left: var(--jp-notebook-padding);\\n  padding-right: calc(2 * var(--jp-notebook-padding));\\n}\\n\\n.jp-FontsEditor option {\\n  text-align: right;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".jp-LicenseViewer-wrapper {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.jp-LicenseViewer {\\n  flex: 1;\\n  display: flex;\\n  flex-direction: column;\\n  padding: var(--jp-notebook-padding);\\n  color: var(--jp-ui-font-color0);\\n  height: 100%;\\n}\\n\\n.jp-LicenseViewer h1,\\n.jp-LicenseViewer h2 {\\n  flex: 0;\\n  margin: var(--jp-notebook-padding) 0;\\n}\\n\\n.jp-LicenseViewer h2 {\\n  color: var(--jp-ui-font-color1);\\n}\\n\\n.jp-LicenseViewer pre {\\n  flex: 1;\\n  overflow-y: auto;\\n  font-size: 80%;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./style/license.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,OAAO;EACP,aAAa;EACb,sBAAsB;EACtB,mCAAmC;EACnC,+BAA+B;EAC/B,YAAY;AACd;;AAEA;;EAEE,OAAO;EACP,oCAAoC;AACtC;;AAEA;EACE,+BAA+B;AACjC;;AAEA;EACE,OAAO;EACP,gBAAgB;EAChB,cAAc;AAChB\",\"sourcesContent\":[\".jp-LicenseViewer-wrapper {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.jp-LicenseViewer {\\n  flex: 1;\\n  display: flex;\\n  flex-direction: column;\\n  padding: var(--jp-notebook-padding);\\n  color: var(--jp-ui-font-color0);\\n  height: 100%;\\n}\\n\\n.jp-LicenseViewer h1,\\n.jp-LicenseViewer h2 {\\n  flex: 0;\\n  margin: var(--jp-notebook-padding) 0;\\n}\\n\\n.jp-LicenseViewer h2 {\\n  color: var(--jp-ui-font-color1);\\n}\\n\\n.jp-LicenseViewer pre {\\n  flex: 1;\\n  overflow-y: auto;\\n  font-size: 80%;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import { ToolbarButton } from '@jupyterlab/apputils';\nimport { DocumentRegistry } from '@jupyterlab/docregistry';\nimport { NotebookPanel, INotebookModel } from '@jupyterlab/notebook';\nimport { IObservableJSON } from '@jupyterlab/observables';\nimport { IDisposable, DisposableDelegate } from '@lumino/disposable';\nimport { ISignal, Signal } from '@lumino/signaling';\n\nimport { ICONS } from './icons';\nimport { PACKAGE_NAME, CONFIGURED_CLASS } from './tokens';\n\n/**\n * A notebook widget extension that adds a button to the toolbar.\n */\nexport class NotebookFontsButton\n  implements DocumentRegistry.IWidgetExtension<NotebookPanel, INotebookModel>\n{\n  readonly widgetRequested: ISignal<any, void> = new Signal<any, void>(this);\n  /**\n   * Create a new extension object.\n   */\n  createNew(\n    panel: NotebookPanel,\n    context: DocumentRegistry.IContext<INotebookModel>\n  ): IDisposable {\n    let button = new ToolbarButton({\n      icon: ICONS.fonts,\n      onClick: () => {\n        (this.widgetRequested as Signal<any, void>).emit(void 0);\n      },\n      tooltip: 'Customize Notebook Fonts',\n    });\n\n    const metaUpdated = (metadata: IObservableJSON) => {\n      const hasMeta = !!metadata.get(PACKAGE_NAME);\n      if (hasMeta) {\n        button.addClass(CONFIGURED_CLASS);\n      } else {\n        button.removeClass(CONFIGURED_CLASS);\n      }\n    };\n\n    const panelModel = panel.model;\n\n    if (panelModel) {\n      panelModel.metadata.changed.connect(metaUpdated);\n      metaUpdated(panelModel.metadata);\n    }\n\n    panel.toolbar.insertItem(9, 'fonts', button);\n\n    return new DisposableDelegate(() => {\n      if (panelModel) {\n        panelModel.metadata.changed.disconnect(metaUpdated);\n      }\n      button.dispose();\n    });\n  }\n}\n","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\">\\n  <defs>\\n    <path id=\\\"a\\\" d=\\\"M24 0v24H0V0h24z\\\" />\\n  </defs>\\n  <clipPath id=\\\"b\\\">\\n    <use xlink:href=\\\"#a\\\" overflow=\\\"visible\\\" />\\n  </clipPath>\\n  <g class=\\\"jp-icon3\\\" fill=\\\"#616161\\\">\\n    <circle cx=\\\"12\\\" cy=\\\"12\\\" r=\\\"10\\\" fill=\\\"rgba(255,255,255,0.5)\\\"></circle>\\n  </g>\\n  <g class=\\\"jp-icon-accent0 jp-icon-selectable\\\" fill=\\\"#fff\\\">\\n    <path d=\\\"M10.08 10.86c.05-.33.16-.62.3-.87s.34-.46.59-.62c.24-.15.54-.22.91-.23.23.01.44.05.63.13.2.09.38.21.52.36s.25.33.34.53.13.42.14.64h1.79c-.02-.47-.11-.9-.28-1.29s-.4-.73-.7-1.01-.66-.5-1.08-.66-.88-.23-1.39-.23c-.65 0-1.22.11-1.7.34s-.88.53-1.2.92-.56.84-.71 1.36S8 11.29 8 11.87v.27c0 .58.08 1.12.23 1.64s.39.97.71 1.35.72.69 1.2.91 1.05.34 1.7.34c.47 0 .91-.08 1.32-.23s.77-.36 1.08-.63.56-.58.74-.94.29-.74.3-1.15h-1.79c-.01.21-.06.4-.15.58s-.21.33-.36.46-.32.23-.52.3c-.19.07-.39.09-.6.1-.36-.01-.66-.08-.89-.23-.25-.16-.45-.37-.59-.62s-.25-.55-.3-.88-.08-.67-.08-1v-.27c0-.35.03-.68.08-1.01zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\\\" clip-path=\\\"url(#b)\\\" />\\n  </g>\\n</svg>\\n\";","import { LabIcon } from '@jupyterlab/ui-components';\n\nimport license from '!!raw-loader!../style/icons/copyright.svg';\nimport fonts from '!!raw-loader!../style/icons/fonts.svg';\n\nexport const ICONS = {\n  fonts: new LabIcon({\n    name: 'fonts:fonts',\n    svgstr: fonts,\n  }),\n  license: new LabIcon({\n    name: 'fonts:license',\n    svgstr: license,\n  }),\n};\n","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" baseProfile=\\\"tiny\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\">\\n  <g class=\\\"jp-icon3\\\" fill=\\\"#616161\\\">\\n    <rect x=\\\"1\\\" y=\\\"1\\\" width=\\\"22\\\" height=\\\"22\\\" rx=\\\"2\\\" ry=\\\"2\\\"/>\\n  </g>\\n  <g class=\\\"jp-icon-accent0 jp-icon-selectable\\\" fill=\\\"#fff\\\">\\n    <text text-anchor=\\\"middle\\\" x=\\\"12px\\\" font-family=\\\"sans-serif\\\" alignment-baseline=\\\"middle\\\" y=\\\"17px\\\">Aa</text>\\n  </g>\\n</svg>\\n\";","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!./license.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { VDomModel, VDomRenderer } from '@jupyterlab/apputils';\nimport * as React from 'react';\n\nimport { IFontFaceOptions } from './tokens';\n\nimport '../style/license.css';\n\nconst WRAPPER_CLASS = 'jp-LicenseViewer-wrapper';\nconst LICENSE_CLASS = 'jp-LicenseViewer';\n\nexport class LicenseViewer extends VDomRenderer<LicenseViewer.Model> {\n  constructor(options: LicenseViewer.IOptions) {\n    super(new LicenseViewer.Model(options));\n  }\n  protected render(): React.ReactElement<any> {\n    this.addClass(WRAPPER_CLASS);\n    let m = this.model;\n\n    // Bail if there is no model.\n    if (!m) {\n      return <></>;\n    }\n\n    const text = m.licenseText ? <pre>{m.licenseText}</pre> : <></>;\n\n    return (\n      <div className={LICENSE_CLASS}>\n        <h1>{m.font.name}</h1>\n        <h2>{m.font.license.name}</h2>\n        {text}\n      </div>\n    );\n  }\n}\n\nexport namespace LicenseViewer {\n  export interface IOptions {\n    font: IFontFaceOptions;\n  }\n\n  export class Model extends VDomModel {\n    private _font: IFontFaceOptions;\n    private _licenseText: string;\n    private _licenseTextPromise: Promise<string>;\n\n    constructor(options: IOptions) {\n      super();\n      this.font = options.font;\n    }\n\n    get font() {\n      return this._font;\n    }\n\n    set font(font) {\n      this._font = font;\n      this.stateChanged.emit(void 0);\n      this._licenseTextPromise = new Promise((resolve, reject) => {\n        this._font.license\n          .text()\n          .then((licenseText) => {\n            this._licenseText = licenseText;\n            this.stateChanged.emit(void 0);\n            resolve(this._licenseText);\n          })\n          .catch((err) => {\n            reject(err);\n          });\n      });\n    }\n\n    get licenseText() {\n      return this._licenseText;\n    }\n\n    get licenseTextPromise() {\n      return this._licenseTextPromise;\n    }\n  }\n}\n","import { ICommandPalette } from '@jupyterlab/apputils';\nimport { INotebookTracker, NotebookPanel } from '@jupyterlab/notebook';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport { CommandRegistry } from '@lumino/commands';\nimport { PromiseDelegate, PartialJSONValue } from '@lumino/coreutils';\nimport { ISignal, Signal } from '@lumino/signaling';\nimport { Menu } from '@lumino/widgets';\n\nimport * as SCHEMA from './schema';\nimport { Stylist } from './stylist';\nimport {\n  IFontManager,\n  PACKAGE_NAME,\n  CSS,\n  CMD,\n  TextProperty,\n  ITextStyleOptions,\n  TEXT_LABELS,\n  TextKind,\n  ROOT,\n  TEXT_OPTIONS,\n  FontFormat,\n  IFontFaceOptions,\n} from './tokens';\nimport { dataURISrc } from './util';\n\nconst ALL_PALETTE = 'Fonts';\n\nconst PALETTE = {\n  code: 'Fonts (Code)',\n  content: 'Fonts (Content)',\n};\n\nexport class FontManager implements IFontManager {\n  protected _stylist: Stylist;\n  readonly licensePaneRequested: ISignal<any, any> = new Signal<any, any>(this);\n  private _fontFamilyMenus = new Map<TextKind, Menu>();\n  private _fontSizeMenus = new Map<TextKind, Menu>();\n  private _lineHeightMenus = new Map<TextKind, Menu>();\n  private _menu: Menu;\n  private _palette: ICommandPalette;\n  private _commands: CommandRegistry;\n  private _notebooks: INotebookTracker;\n  private _ready = new PromiseDelegate<void>();\n\n  private _settings: ISettingRegistry.ISettings;\n\n  constructor(\n    commands: CommandRegistry,\n    palette: ICommandPalette,\n    notebooks: INotebookTracker\n  ) {\n    this._stylist = new Stylist();\n    this._stylist.cacheUpdated.connect(this.settingsUpdate, this);\n    this._commands = commands;\n    this._palette = palette;\n    this._notebooks = notebooks;\n\n    this._notebooks.currentChanged.connect(this._onNotebooksChanged, this);\n\n    this.makeMenus(commands);\n    this.makeCommands();\n\n    this.hack();\n  }\n\n  get ready() {\n    return this._ready.promise;\n  }\n\n  get fonts() {\n    return this._stylist.fonts;\n  }\n\n  get enabled() {\n    if (!this.settings) {\n      return false;\n    }\n    const enabled = !!this._settings.get('enabled').composite;\n    return enabled;\n  }\n\n  set enabled(enabled) {\n    if (!this.settings) {\n      return;\n    }\n    this._settings.set('enabled', enabled).then().catch(console.warn);\n  }\n\n  get menu() {\n    return this._menu;\n  }\n\n  get stylesheets() {\n    return this._stylist.stylesheets;\n  }\n\n  get settings() {\n    return this._settings;\n  }\n\n  set settings(settings) {\n    if (this._settings) {\n      this._settings.changed.disconnect(this.settingsUpdate, this);\n    }\n    this._settings = settings;\n    if (settings) {\n      settings.changed.connect(this.settingsUpdate, this);\n    }\n    this.settingsUpdate();\n  }\n\n  setTransientNotebookStyle(\n    panel: NotebookPanel,\n    style: SCHEMA.ISettings | null\n  ): void {\n    this._stylist.setTransientNotebookStyle(panel, style);\n  }\n\n  getTransientNotebookStyle(panel: NotebookPanel): SCHEMA.ISettings | null {\n    return this._stylist.getTransientNotebookStyle(panel);\n  }\n\n  public async dataURISrc(url: string, format = FontFormat.woff2): Promise<string> {\n    return await dataURISrc(url, format);\n  }\n\n  registerFontFace(options: IFontFaceOptions): void {\n    this._stylist.fonts.set(options.name, options);\n    this.registerFontCommands(options);\n  }\n\n  getVarName(property: TextProperty, { kind }: Partial<ITextStyleOptions>) {\n    if (kind == null) {\n      return null;\n    }\n    return CSS[kind][property];\n  }\n\n  getTextStyle(property: TextProperty, { kind, notebook }: ITextStyleOptions) {\n    if (!notebook && !this.settings) {\n      return null;\n    }\n\n    try {\n      const styles: SCHEMA.IStyles = notebook?.model\n        ? (notebook.model.metadata.get(PACKAGE_NAME) as any).styles\n        : (this._settings.get('styles').composite as any);\n      let varName = this.getVarName(property, { kind });\n      if (styles != null) {\n        const rootStyle = styles[ROOT];\n        if (rootStyle == null) {\n          return null;\n        }\n        return rootStyle[varName as any];\n      }\n    } catch (err) {\n      //\n    }\n    return null;\n  }\n\n  async setTextStyle(\n    property: TextProperty,\n    value: SCHEMA.ICSSOM | null,\n    { kind, notebook }: ITextStyleOptions\n  ): Promise<void> {\n    if (!notebook && !this.settings) {\n      return;\n    }\n    let oldStyles: SCHEMA.IStyles;\n\n    const model = notebook?.model;\n\n    try {\n      if (model) {\n        oldStyles = (model.metadata.get(PACKAGE_NAME) as any).styles;\n      } else {\n        oldStyles = this._settings.get('styles').user as any;\n      }\n    } catch (err) {\n      oldStyles = {};\n    }\n\n    let styles: SCHEMA.IStyles = JSON.parse(JSON.stringify(oldStyles || {}));\n    let root = (styles[ROOT] = styles[ROOT] ? styles[ROOT] : {});\n    let varName = this.getVarName(property, { kind });\n\n    if (root) {\n      if (value == null) {\n        delete root[varName as any];\n      } else {\n        root[varName as any] = value;\n      }\n    }\n\n    if (notebook) {\n      let metadata = (notebook.model?.metadata.get(PACKAGE_NAME) ||\n        {}) as SCHEMA.ISettings;\n      metadata = JSON.parse(JSON.stringify(metadata));\n      metadata.styles = styles;\n      switch (property) {\n        case 'font-family':\n          if (value != null) {\n            await this.embedFont(value, metadata);\n          }\n          break;\n        default:\n          break;\n      }\n      this.cleanMetadata(metadata);\n      notebook.model?.metadata.set(PACKAGE_NAME, metadata as any);\n    } else {\n      if (!Object.keys(styles[ROOT] || {}).length) {\n        delete styles[ROOT];\n      }\n      try {\n        await this._settings.set('styles', styles as PartialJSONValue);\n      } catch (err) {\n        console.warn(err);\n      }\n    }\n  }\n\n  cleanMetadata(metadata: SCHEMA.ISettings) {\n    const rawStyle = JSON.stringify(metadata.styles, null, 2);\n    const oldFonts = Object.keys(metadata.fonts || {});\n    for (let fontFamily of oldFonts) {\n      let pattern = `'${fontFamily}'`;\n      if (rawStyle.indexOf(pattern) === -1) {\n        if (metadata.fonts) {\n          delete metadata.fonts[fontFamily];\n        }\n        if (metadata.fontLicenses) {\n          delete metadata.fontLicenses[fontFamily];\n        }\n      }\n    }\n  }\n\n  async embedFont(fontFamily: SCHEMA.ICSSOM, metadata: SCHEMA.ISettings) {\n    if (fontFamily == null) {\n      return;\n    }\n    const unquoted = (fontFamily as string).replace(/(['\"]?)(.*)\\1/, '$2');\n    const registered = this._stylist.fonts.get(unquoted);\n    if (!registered) {\n      return;\n    }\n    try {\n      const faces = await registered.faces();\n      const oldFaces = (metadata.fonts || {}) as SCHEMA.IFontFaceObject;\n      const oldLicenses = (metadata.fontLicenses || {}) as SCHEMA.IFontLicenseObject;\n      oldFaces[unquoted] = faces;\n      oldLicenses[unquoted] = {\n        spdx: registered.license.spdx,\n        name: registered.license.name,\n        text: await registered.license.text(),\n        holders: registered.license.holders,\n      };\n      metadata.fonts = oldFaces;\n      metadata.fontLicenses = oldLicenses;\n    } catch (err) {\n      console.warn('error embedding font');\n      console.warn(err);\n    }\n  }\n\n  private _onNotebooksChanged() {\n    let styled = this._stylist.notebooks();\n\n    this._notebooks.forEach((notebook) => {\n      if (styled.indexOf(notebook) === -1) {\n        this._registerNotebook(notebook);\n      }\n    });\n  }\n\n  private _registerNotebook(panel: NotebookPanel) {\n    this._stylist.registerNotebook(panel, true);\n    let watcher = this._notebookMetaWatcher(panel);\n    if (panel?.model) {\n      panel.model.metadata.changed.connect(watcher);\n    }\n    panel.disposed.connect(this._onNotebookDisposed, this);\n    watcher();\n    this.hack();\n  }\n\n  private _onNotebookDisposed(panel: NotebookPanel) {\n    this._stylist.registerNotebook(panel, false);\n  }\n\n  private _notebookMetaWatcher(panel: NotebookPanel) {\n    return () => {\n      this._notebooks.forEach((notebook) => {\n        if (notebook.id !== panel.id || !notebook.model) {\n          return;\n        }\n        const meta = notebook.model.metadata.get(PACKAGE_NAME) as SCHEMA.ISettings;\n        if (meta) {\n          this._stylist.stylesheet(meta, notebook);\n        }\n      });\n    };\n  }\n\n  fontSizeOptions() {\n    return Array.from(Array(25).keys()).map((i) => `${i + 8}px`);\n  }\n\n  fontSizeCommands(prefix: string) {\n    return this.fontSizeOptions().map((px) => `${prefix}:${px}`);\n  }\n\n  makeCommands() {\n    [TextKind.code, TextKind.content].map((kind) => {\n      ['Increase', 'Decrease'].map((label, i) => {\n        let command = `${CMD[kind].fontSize}:${label.toLowerCase()}`;\n        this._commands.addCommand(command, {\n          label: `${label} Code Font Size`,\n          execute: async () => {\n            let oldSize = this.getTextStyle('font-size', { kind }) as string;\n            let cfs = parseInt((oldSize || '0').replace(/px$/, ''), 10) || 13;\n            try {\n              await this.setTextStyle('font-size', `${cfs + (i ? -1 : 1)}px`, {\n                kind,\n              });\n            } catch (err) {\n              console.warn(err);\n            }\n          },\n          isVisible: () => this.enabled,\n        });\n        this._fontSizeMenus.get(kind)?.addItem({ command });\n        this._palette.addItem({ command, category: PALETTE[kind], rank: 0 });\n      });\n\n      ['line-height', 'font-size', 'font-family'].forEach((prop: TextProperty) => {\n        const command = `${kind}-${prop}:-reset`;\n        this._commands.addCommand(command, {\n          label: `Default ${kind[0].toUpperCase()}${kind.slice(1)} ${\n            TEXT_LABELS[prop]\n          }`,\n          execute: () => this.setTextStyle(prop, null, { kind }),\n          isVisible: () => this.enabled,\n          isToggled: () => this.getTextStyle(prop, { kind }) == null,\n        });\n      });\n\n      TEXT_OPTIONS['line-height'](this).map((lineHeight) => {\n        const command = `${CMD[kind].lineHeight}:${lineHeight}`;\n        this._commands.addCommand(command, {\n          label: `${lineHeight}`,\n          isToggled: () => this.getTextStyle('line-height', { kind }) === lineHeight,\n          isVisible: () => this.enabled,\n          execute: () => this.setTextStyle('line-height', lineHeight, { kind }),\n        });\n        this._lineHeightMenus.get(kind)?.addItem({ command });\n      });\n\n      TEXT_OPTIONS['font-size'](this).map((px) => {\n        const command = `${CMD[kind].fontSize}:${px}`;\n        this._commands.addCommand(command, {\n          label: `${px}`,\n          isToggled: () => this.getTextStyle('font-size', { kind }) === px,\n          isVisible: () => this.enabled,\n          execute: () => this.setTextStyle('font-size', px, { kind }),\n        });\n        this._fontSizeMenus.get(kind)?.addItem({ command });\n      });\n    });\n\n    ['Enable', 'Disable'].map((label, i) => {\n      const command = `custom-fonts:${label.toLowerCase()}`;\n      this._commands.addCommand(command, {\n        label: `${label} Custom Fonts`,\n        isVisible: () => this.enabled === !!i,\n        execute: async () => {\n          if (!this._settings) {\n            return;\n          }\n          try {\n            await this._settings.set('enabled', !i);\n          } catch (err) {\n            console.warn(err);\n          }\n        },\n      });\n      this._palette.addItem({ command, category: ALL_PALETTE });\n    });\n  }\n\n  protected fontPropMenu(parent: Menu, kind: TextKind, property: TextProperty) {\n    let menu = new Menu({ commands: parent.commands });\n    menu.title.label = TEXT_LABELS[property];\n\n    menu.addItem({\n      command: `${kind}-${property}:-reset`,\n    });\n\n    menu.addItem({\n      type: 'separator',\n    });\n\n    parent.addItem({ type: 'submenu', submenu: menu });\n\n    return menu;\n  }\n\n  protected makeMenus(commands: CommandRegistry) {\n    this._menu = new Menu({ commands });\n    this._menu.title.label = 'Fonts';\n\n    [TextKind.code, TextKind.content].map((kind) => {\n      const submenu = new Menu({ commands });\n      submenu.title.label = kind[0].toUpperCase() + kind.slice(1);\n      this._menu.addItem({ type: 'submenu', submenu });\n\n      const family = this.fontPropMenu(submenu, kind, 'font-family');\n      const height = this.fontPropMenu(submenu, kind, 'line-height');\n      const size = this.fontPropMenu(submenu, kind, 'font-size');\n\n      this._fontFamilyMenus.set(kind, family);\n      this._lineHeightMenus.set(kind, height);\n      this._fontSizeMenus.set(kind, size);\n    });\n\n    this._menu.addItem({\n      command: CMD.editFonts,\n      args: { global: true },\n    });\n\n    this._menu.addItem({\n      command: CMD.customFonts.enable,\n    });\n\n    this._menu.addItem({\n      command: CMD.customFonts.disable,\n    });\n  }\n\n  settingsUpdate(): void {\n    let meta: SCHEMA.ISettings = {\n      styles: this._settings.get('styles').composite as SCHEMA.IStyles,\n    };\n    if (this.enabled) {\n      this._stylist.stylesheet(meta, void 0, true);\n    } else {\n      this._stylist.hack(false);\n    }\n  }\n\n  private registerFontCommands(options: IFontFaceOptions) {\n    [TextKind.code, TextKind.content].forEach((kind) => {\n      const slug = options.name.replace(/[^a-z\\d]/gi, '-').toLowerCase();\n      let command = `${CMD[kind].fontFamily}:${slug}`;\n      this._commands.addCommand(command, {\n        label: options.name,\n        isToggled: () => {\n          let cff = this.getTextStyle('font-family', { kind });\n          return `${cff}`.indexOf(`'${options.name}'`) > -1;\n        },\n        isVisible: () => this.enabled,\n        execute: async () => {\n          try {\n            await this.setTextStyle('font-family', `'${options.name}'`, {\n              kind,\n            });\n          } catch (err) {\n            console.warn(err);\n          }\n        },\n      });\n      this._fontFamilyMenus.get(kind)?.addItem({ command });\n      this._palette.addItem({ command, category: PALETTE[kind] });\n    });\n  }\n\n  requestLicensePane(font: any) {\n    (this.licensePaneRequested as Signal<any, void>).emit(font);\n  }\n\n  hack() {\n    this._stylist.hack();\n    this._ready.resolve(void 0);\n  }\n}\n","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!./editor.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { Dialog, showDialog, VDomModel, VDomRenderer } from '@jupyterlab/apputils';\nimport { NotebookPanel } from '@jupyterlab/notebook';\nimport { ReadonlyJSONObject } from '@lumino/coreutils';\nimport * as React from 'react';\n\nimport { FontManager } from './manager';\nimport * as SCHEMA from './schema';\nimport {\n  TextKind,\n  TEXT_OPTIONS,\n  TEXT_LABELS,\n  KIND_LABELS,\n  TextProperty,\n  IFontFaceOptions,\n  PACKAGE_NAME,\n} from './tokens';\n\nimport '../style/editor.css';\n\nconst h = React.createElement;\n\nconst EDITOR_CLASS = 'jp-FontsEditor';\nconst ENABLED_CLASS = 'jp-FontsEditor-enable';\nconst FIELD_CLASS = 'jp-FontsEditor-field';\nconst EMBED_CLASS = 'jp-FontsEditor-embed';\nconst SECTION_CLASS = 'lm-CommandPalette-header';\nconst BUTTON_CLASS = 'jp-FontsEditor-button jp-mod-styled';\nconst SIZE_CLASS = 'jp-FontsEditor-size';\nconst DUMMY = '-';\n\nexport class FontEditorModel extends VDomModel {\n  private _notebook: NotebookPanel | null;\n  private _fonts: FontManager;\n\n  get fonts() {\n    return this._fonts;\n  }\n\n  set fonts(fonts) {\n    if (this._fonts && this._fonts.settings) {\n      this._fonts.settings.changed.disconnect(this.onSettingsChange, this);\n    }\n    this._fonts = fonts;\n    fonts.settings.changed.connect(this.onSettingsChange, this);\n    this.stateChanged.emit(void 0);\n  }\n\n  private onSettingsChange() {\n    this.stateChanged.emit(void 0);\n  }\n\n  get notebook() {\n    return this._notebook;\n  }\n\n  set notebook(notebook) {\n    if (this._notebook?.model) {\n      this._notebook.model.metadata.changed.disconnect(this.onSettingsChange, this);\n      this._notebook.context.pathChanged.disconnect(this.onSettingsChange, this);\n    }\n    this._notebook = notebook;\n    if (this._notebook?.model) {\n      this._notebook.model.metadata.changed.connect(this.onSettingsChange, this);\n      this._notebook.context.pathChanged.connect(this.onSettingsChange, this);\n    }\n    this.stateChanged.emit(void 0);\n  }\n\n  get enabled() {\n    return this._fonts.enabled;\n  }\n\n  async setEnabled(enabled: boolean) {\n    if (this.notebook == null) {\n      await this._fonts.settings.set('enabled', enabled);\n      this.stateChanged.emit(void 0);\n    }\n  }\n\n  get notebookMetadata() {\n    if (this.notebook?.model) {\n      return this.notebook.model.metadata.get(PACKAGE_NAME) as SCHEMA.ISettings;\n    }\n  }\n\n  clearNotebookMetadata(fontName?: string) {\n    let meta = this.notebookMetadata;\n    if (fontName) {\n      if (meta?.fonts) {\n        delete meta.fonts[fontName];\n      }\n      if (meta?.fontLicenses) {\n        delete meta.fontLicenses[fontName];\n      }\n    }\n    if (this.notebook?.model) {\n      this.notebook.model.metadata.set(\n        PACKAGE_NAME,\n        JSON.parse(JSON.stringify(meta)) as any\n      );\n    }\n    this.stateChanged.emit(void 0);\n  }\n\n  dispose() {\n    if (this._fonts && this._fonts.settings) {\n      this._fonts.settings.changed.disconnect(this.onSettingsChange, this);\n    }\n    super.dispose();\n  }\n}\n\nexport class FontEditor extends VDomRenderer<FontEditorModel> {\n  constructor() {\n    super(new FontEditorModel());\n    this.addClass(EDITOR_CLASS);\n  }\n\n  protected render(): React.ReactElement<any> {\n    const m = this.model;\n    if (!m) {\n      return h('div', { key: 'empty' });\n    }\n\n    return h('div', { key: 'editor' }, [\n      ...this.header(),\n      ...[TextKind.code, TextKind.content].map((kind) =>\n        h('section', { key: `${kind}-section`, title: KIND_LABELS[kind] }, [\n          h(\n            'h3',\n            { key: `${kind}-header`, className: SECTION_CLASS },\n            KIND_LABELS[kind]\n          ),\n          ...['font-family', 'font-size', 'line-height'].map((prop: TextProperty) =>\n            this.textSelect(prop, kind, { key: `${kind}-${prop}` })\n          ),\n        ])\n      ),\n    ]);\n  }\n\n  protected fontFaceExtras(m: FontEditorModel, fontFamily: string) {\n    let font: IFontFaceOptions | undefined;\n    let unquoted = `${fontFamily}`.slice(1, -1);\n    if (m.fonts.fonts.get(unquoted)) {\n      font = m.fonts.fonts.get(unquoted);\n    }\n    return !font ? [] : [this.licenseButton(m, font)];\n  }\n\n  protected licenseButton(m: FontEditorModel, font: IFontFaceOptions) {\n    return h(\n      'button',\n      {\n        className: BUTTON_CLASS,\n        title: font.license.name,\n        key: font.name,\n        onClick: () => m.fonts.requestLicensePane(font),\n      },\n      font.license.spdx\n    );\n  }\n\n  protected textSelect(\n    prop: TextProperty,\n    kind: TextKind,\n    sectionProps: ReadonlyJSONObject\n  ) {\n    const m = this.model;\n    const onChange = (evt: React.FormEvent<HTMLSelectElement>) => {\n      let value: string | null = (evt.target as HTMLSelectElement).value;\n      value = value === DUMMY ? null : value;\n      m.fonts\n        .setTextStyle(prop, value, {\n          kind,\n          ...(m.notebook ? { notebook: m.notebook } : {}),\n        })\n        .catch(console.warn);\n    };\n    const value = m.fonts.getTextStyle(prop, {\n      kind,\n      notebook: m.notebook || void 0,\n    });\n    const extra = prop === 'font-family' ? this.fontFaceExtras(m, value as any) : [];\n\n    return h('div', { className: FIELD_CLASS, key: 'select-field', ...sectionProps }, [\n      h('label', { key: 'select-label' }, TEXT_LABELS[prop]),\n      h('div', { key: 'select-wrap' }, [\n        ...extra,\n        h(\n          'select',\n          {\n            className: 'jp-mod-styled',\n            title: `${TEXT_LABELS[prop]}`,\n            onChange,\n            defaultValue: value || DUMMY,\n            key: `select`,\n          },\n          [null, ...TEXT_OPTIONS[prop](m.fonts)].map((value) => {\n            return h(\n              'option',\n              {\n                key: `'${value}'`,\n                value:\n                  value == null ? DUMMY : prop === 'font-family' ? `'${value}'` : value,\n              },\n              value || DUMMY\n            );\n          })\n        ),\n      ]),\n    ]);\n  }\n\n  protected deleteButton(m: FontEditorModel, fontName: string) {\n    return h(\n      'button',\n      {\n        className: BUTTON_CLASS,\n        title: `Delete Embedded Font`,\n        key: 'delete',\n        onClick: async () => {\n          const result = await showDialog({\n            title: `Delete Embedded Font from Notebook`,\n            body: `If you dont have ${fontName} installed, you might not be able to re-embed it`,\n            buttons: [Dialog.cancelButton(), Dialog.warnButton({ label: 'DELETE' })],\n          });\n\n          if (result.button.accept) {\n            m.clearNotebookMetadata(fontName);\n          }\n        },\n      },\n      'Delete'\n    );\n  }\n\n  protected enabler(m: FontEditorModel) {\n    const onChange = async (evt: Event) => {\n      await m.setEnabled(!!(evt.currentTarget as HTMLInputElement).checked);\n    };\n\n    return h(\n      'label',\n      { key: 'enable-label' },\n      h('span', { key: 'enable-text' }, 'Enabled'),\n      h('input', {\n        key: 'enable-input',\n        type: 'checkbox',\n        checked: m.enabled,\n        onChange,\n      })\n    );\n  }\n\n  protected embeddedFont(m: FontEditorModel, fontName: string) {\n    if (m.notebookMetadata?.fonts == null || m.notebookMetadata.fontLicenses == null) {\n      return null;\n    }\n    const faces = m.notebookMetadata.fonts[fontName];\n    const license = m.notebookMetadata.fontLicenses[fontName];\n    const size = (faces || []).reduce(\n      (memo, face) => memo + `${face.src}`.length,\n      license.text.length\n    );\n    const kb = parseInt(`${size / 1024}`, 10);\n\n    return h('li', { key: fontName }, [\n      h('label', { key: 'label' }, fontName),\n      this.licenseButton(m, {\n        name: fontName,\n        license: {\n          name: license.name,\n          spdx: license.spdx,\n          text: async () => license.text,\n          holders: license.holders,\n        },\n        faces: async () => faces || [],\n      }),\n      h('span', { className: SIZE_CLASS, key: 'font-kb' }, `${kb} kb`),\n      this.deleteButton(m, fontName),\n    ]);\n  }\n\n  protected header() {\n    const m = this.model;\n    const title = m.notebook\n      ? m.notebook.context.contentsModel?.name.replace(/.ipynb$/, '')\n      : 'Global';\n\n    this.title.label = title || 'Unknown';\n\n    const h2 = h('h2', { key: 'scope-head' }, [\n      h('label', { key: 'scope-label' }, `Fonts » ${title}`),\n      ...(m.notebook\n        ? [h('div', { className: 'jp-NotebookIcon', key: 'scope-icon' })]\n        : []),\n    ]);\n\n    if (m.notebook != null) {\n      return [\n        h2,\n        h('section', { key: 'embed-section' }, [\n          h('h3', { className: SECTION_CLASS, key: 'embed-head' }, 'Embedded fonts'),\n          h(\n            'ul',\n            { className: EMBED_CLASS, key: 'embeds' },\n            Object.keys((m.notebookMetadata || {}).fonts || {}).map((fontName) => {\n              return this.embeddedFont(m, fontName);\n            })\n          ),\n        ]),\n      ];\n    } else {\n      return [\n        h2,\n        h('section', { key: 'enable-section', className: ENABLED_CLASS }, [\n          h(\n            'h3',\n            { className: SECTION_CLASS, key: 'enable-header' },\n            'Enable/Disable All Fonts'\n          ),\n          this.enabler(m),\n        ]),\n      ];\n    }\n  }\n}\n","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!./index.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { JupyterLab, JupyterFrontEndPlugin } from '@jupyterlab/application';\nimport { ICommandPalette } from '@jupyterlab/apputils';\nimport { IMainMenu } from '@jupyterlab/mainmenu';\nimport { INotebookTracker } from '@jupyterlab/notebook';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\n\nimport { NotebookFontsButton } from './button';\nimport { FontEditor } from './editor';\nimport { ICONS } from './icons';\nimport { LicenseViewer } from './license';\nimport { FontManager } from './manager';\nimport { IFontManager, PACKAGE_NAME, CMD, IFontFaceOptions } from './tokens';\n\nimport '../style/index.css';\n\nconst PLUGIN_ID = `${PACKAGE_NAME}:fonts`;\n\nlet licenseId = 0;\n\nconst plugin: JupyterFrontEndPlugin<IFontManager> = {\n  id: PLUGIN_ID,\n  autoStart: true,\n  requires: [IMainMenu, ISettingRegistry, ICommandPalette, INotebookTracker],\n  provides: IFontManager,\n  activate: function (\n    app: JupyterLab,\n    menu: IMainMenu,\n    settingRegistry: ISettingRegistry,\n    palette: ICommandPalette,\n    notebooks: INotebookTracker\n  ): IFontManager {\n    const manager = new FontManager(app.commands, palette, notebooks);\n\n    manager.licensePaneRequested.connect((it, font: IFontFaceOptions) => {\n      let license = new LicenseViewer({ font });\n      license.id = `jp-fonts-license-${licenseId++}`;\n      license.title.label = font.name;\n      license.title.closable = true;\n      license.title.icon = ICONS.license;\n      app.shell.add(license, 'main');\n      app.shell.activateById(license.id);\n    });\n\n    menu.settingsMenu.addGroup([{ type: 'submenu', submenu: manager.menu }]);\n\n    app.commands.addCommand(CMD.editFonts, {\n      label: 'Global Fonts...',\n      execute: (args) => {\n        const editor = new FontEditor();\n        const { model } = editor;\n        model.fonts = manager;\n        editor.title.icon = ICONS.fonts;\n        editor.title.closable = true;\n        if ((args || {})['global']) {\n          editor.title.label = 'Global';\n          editor.id = 'font-editor-global';\n        } else {\n          const { currentWidget } = notebooks;\n          if (currentWidget == null) {\n            return;\n          }\n          model.notebook = currentWidget;\n          editor.id = `font-editor-${model.notebook.id}`;\n          model.notebook.disposed.connect(() => editor.dispose());\n        }\n\n        app.shell.add(editor, 'main', { mode: 'split-right' });\n      },\n    });\n\n    const fontsButton = new NotebookFontsButton();\n    fontsButton.widgetRequested.connect(async () => {\n      try {\n        await app.commands.execute(CMD.editFonts);\n      } catch (err) {\n        console.warn(err);\n      }\n    });\n\n    app.docRegistry.addWidgetExtension('Notebook', fontsButton);\n\n    Promise.all([settingRegistry.load(PLUGIN_ID), app.restored])\n      .then(async ([settings]) => {\n        manager.settings = settings;\n        settingRegistry\n          .load('@jupyterlab/apputils-extension:themes')\n          .then((settings) => {\n            settings.changed.connect(() => {\n              setTimeout(() => manager.hack(), 100);\n            });\n          })\n          .catch(console.warn);\n      })\n      .catch((reason: Error) => {\n        console.error(reason);\n      });\n\n    return manager;\n  },\n};\n\nexport default plugin;\n","import { Cell, ICellModel } from '@jupyterlab/cells';\nimport { PathExt, PageConfig, URLExt } from '@jupyterlab/coreutils';\nimport { Notebook, NotebookPanel } from '@jupyterlab/notebook';\nimport { JSONExt } from '@lumino/coreutils';\nimport { Debouncer } from '@lumino/polling';\nimport { Signal } from '@lumino/signaling';\nimport * as JSS from 'jss';\nimport jssPresetDefault from 'jss-preset-default';\n\nimport * as SCHEMA from './schema';\nimport { ROOT, IFontFaceOptions, DOM, PACKAGE_NAME } from './tokens';\n\nconst RE_CSS_IMPORT = /^@import(.*$)/;\nconst RE_CSS_REL_URL = /url\\(\\s*['\"]?(\\.[^\\)'\"]+)['\"]?\\s*\\)/g;\n\nexport class Stylist {\n  fonts = new Map<string, IFontFaceOptions>();\n\n  private _globalStyles: HTMLStyleElement;\n  private _notebookStyles = new Map<NotebookPanel, HTMLStyleElement>();\n  private _transientNotebookStyles = new Map<NotebookPanel, SCHEMA.ISettings>();\n  private _jss = JSS.create(jssPresetDefault());\n  private _fontCache = new Map<string, SCHEMA.IFontFacePrimitive[]>();\n  private _cacheUpdated = new Signal<this, void>(this);\n  private _cellStyleCache = new Map<string, any>();\n  private _notebookContentDebouncer: Debouncer;\n  private _notebookCellCount = new Map<Notebook, number>();\n\n  constructor() {\n    this._globalStyles = document.createElement('style');\n    this._globalStyles.classList.add(DOM.sheet);\n    this._globalStyles.classList.add(DOM.modGlobal);\n    this._notebookContentDebouncer = new Debouncer((notebook: Notebook) => {\n      this._onNotebookModelContentChanged(notebook);\n    }, 100);\n  }\n  get cacheUpdated() {\n    return this._cacheUpdated;\n  }\n\n  registerNotebook(panel: NotebookPanel, register: boolean) {\n    if (register) {\n      const sheet = document.createElement('style');\n      this._notebookStyles.set(panel, sheet);\n      sheet.classList.add(DOM.sheet);\n      sheet.classList.add(DOM.modNotebook);\n      panel.content.modelContentChanged.connect(\n        this._debouncedNotebookContentChanged,\n        this\n      );\n      panel.disposed.connect(this._onDisposed, this);\n      this._onNotebookModelContentChanged(panel.content);\n      this.hack();\n    } else {\n      this._onDisposed(panel);\n    }\n  }\n\n  private _debouncedNotebookContentChanged(notebook: Notebook) {\n    this._notebookContentDebouncer.invoke(notebook).catch(console.warn);\n  }\n\n  /** hoist cell metadata to data attributes */\n  private _onNotebookModelContentChanged(notebook: Notebook) {\n    const newCellCount = notebook.widgets.length;\n    const oldCellCount = this._notebookCellCount.get(notebook) || -1;\n\n    let needsUpdate = newCellCount !== oldCellCount;\n    for (const cell of notebook.widgets) {\n      cell.node.dataset.jpfCellId = cell.model.id;\n      let tags = [...((cell.model.metadata.get('tags') || []) as string[])].join(',');\n      if (tags) {\n        cell.node.dataset.jpfCellTags = `,${tags},`;\n      } else {\n        delete cell.node.dataset.jpfCellTags;\n      }\n\n      if (!needsUpdate) {\n        const meta = cell.model.metadata.get(PACKAGE_NAME) || JSONExt.emptyObject;\n        let cached = this._cellStyleCache.get(cell.model.id) || JSONExt.emptyObject;\n        if (!JSONExt.deepEqual(meta, cached)) {\n          needsUpdate = true;\n        }\n        this._cellStyleCache.set(cell.model.id, meta);\n      }\n    }\n\n    if (needsUpdate) {\n      this.stylesheet(\n        notebook.model?.metadata.get(PACKAGE_NAME) as SCHEMA.ISettings,\n        notebook.parent as NotebookPanel\n      );\n      this._notebookCellCount.set(notebook, newCellCount);\n    }\n  }\n\n  private _onDisposed(panel: NotebookPanel) {\n    if (this._notebookStyles.has(panel)) {\n      this._notebookStyles.get(panel)?.remove();\n      this._notebookStyles.delete(panel);\n      panel.disposed.disconnect(this._onDisposed, this);\n      panel.content.modelContentChanged.disconnect(\n        this._debouncedNotebookContentChanged,\n        this\n      );\n    }\n    if (this._notebookCellCount.has(panel.content)) {\n      this._notebookCellCount.delete(panel.content);\n    }\n  }\n\n  get stylesheets() {\n    return [this._globalStyles, ...Array.from(this._notebookStyles.values())];\n  }\n\n  notebooks() {\n    return Array.from(this._notebookStyles.keys());\n  }\n\n  setTransientNotebookStyle(\n    panel: NotebookPanel,\n    style: SCHEMA.ISettings | null\n  ): void {\n    if (style == null) {\n      this._transientNotebookStyles.delete(panel);\n    } else {\n      this._transientNotebookStyles.set(panel, style);\n    }\n    const meta = panel.model?.metadata.get(PACKAGE_NAME) as SCHEMA.ISettings;\n    this.stylesheet(meta, panel);\n  }\n\n  getTransientNotebookStyle(panel: NotebookPanel): SCHEMA.ISettings | null {\n    return this._transientNotebookStyles.get(panel) || null;\n  }\n\n  stylesheet(meta: SCHEMA.ISettings | null, panel?: NotebookPanel, clear = false) {\n    let sheet = panel ? this._notebookStyles.get(panel) : this._globalStyles;\n\n    let style: SCHEMA.IStyles | null = null;\n    let jss: JSS.StyleSheet | null = null;\n    let css: string = '';\n\n    if (meta) {\n      style = panel ? this._nbMetaToStyle(meta, panel) : this._settingsToStyle(meta);\n      jss = this._jss.createStyleSheet(style as any);\n      css = jss.toString();\n    }\n\n    if (panel) {\n      let transientMeta = this.getTransientNotebookStyle(panel);\n      if (transientMeta) {\n        style = this._nbMetaToStyle(transientMeta, panel);\n        jss = this._jss.createStyleSheet(style as any);\n        css = `${css.trim()}\\n${jss.toString()}`;\n      }\n      for (const cell of panel.content.widgets) {\n        let cellMeta =\n          (cell.model.metadata.get(PACKAGE_NAME) as SCHEMA.ISettings) ||\n          JSONExt.emptyObject;\n        style = this._nbMetaToStyle(cellMeta, panel, cell);\n        jss = this._jss.createStyleSheet(style as any);\n        css = `${css.trim()}\\n${jss.toString()}`;\n      }\n    }\n\n    css = this._normalizeCSS(css, panel);\n\n    if (sheet && sheet.textContent !== css) {\n      sheet.textContent = css;\n    }\n\n    this.hack();\n  }\n\n  private _normalizeCSS(css: string, panel?: NotebookPanel) {\n    const lines = css.split('\\n');\n    const finalLines: string[] = [];\n    const imports: string[] = [];\n    let localPath = panel?.context.localPath || null;\n    if (localPath) {\n      localPath = URLExt.join(\n        PageConfig.getBaseUrl(),\n        'files',\n        PathExt.dirname(localPath)\n      );\n    }\n    let line: string;\n    for (line of lines) {\n      if (localPath != null) {\n        line = line.replace(RE_CSS_REL_URL, `url('${localPath}/$1')`);\n      }\n\n      let importMatch = line.match(RE_CSS_IMPORT);\n      if (importMatch) {\n        imports.push(line);\n      } else {\n        finalLines.push(line);\n      }\n    }\n    return [...imports, ...finalLines].join('\\n');\n  }\n\n  private _nbMetaToStyle(\n    meta: SCHEMA.ISettings,\n    panel: NotebookPanel,\n    cell: Cell<ICellModel> | null = null\n  ): SCHEMA.IStyles {\n    let jss: any = { '@font-face': [], '@global': {}, '@import': [] };\n    let selector = `.${DOM.notebookPanel}[id='${panel.id}']`;\n    if (cell) {\n      selector = `${selector} .${DOM.cell}[data-jpf-cell-id=\"${cell.model.id}\"]`;\n    }\n\n    let idStyles: any = (jss['@global'][selector] = {});\n\n    if (meta.fonts) {\n      for (let fontFamily in meta.fonts) {\n        jss['@font-face'] = jss['@font-face'].concat(meta.fonts[fontFamily]);\n      }\n    }\n\n    let styles = meta.styles || JSONExt.emptyObject;\n    for (let kv of Object.entries(styles)) {\n      let [k, v] = kv;\n      switch (k) {\n        case '@import':\n        case '@font-face':\n          jss[k].push(...(Array.isArray(v) ? v : [v]));\n          break;\n        default:\n          if (k === ROOT) {\n            for (let rootK in v as any[]) {\n              if (styles == null || v == null) {\n                continue;\n              }\n              idStyles[rootK] = (v as any)[rootK];\n            }\n          } else if (typeof v === 'object') {\n            idStyles[`& ${k}`] = v;\n          } else {\n            idStyles[k] = v;\n          }\n          break;\n      }\n    }\n    return jss as SCHEMA.IStyles;\n  }\n\n  private _settingsToStyle(meta: SCHEMA.ISettings): SCHEMA.IStyles {\n    let raw = JSON.stringify(meta.styles);\n    let styles = JSON.parse(raw) as SCHEMA.ISettings;\n    let faces = {} as SCHEMA.IFontFaceObject;\n    let imports: string[] = [];\n    for (let font of Array.from(this.fonts.keys())) {\n      if (raw.indexOf(`'${font}'`) > -1 && !faces[font]) {\n        const cachedFont = this._fontCache.get(font);\n        if (cachedFont != null) {\n          faces[font] = cachedFont;\n        } else {\n          new Promise<void>((resolve, reject) => {\n            const options = this.fonts.get(font);\n            if (options == null) {\n              reject();\n              return;\n            } else {\n              options\n                .faces()\n                .then((faces) => {\n                  if (this._fontCache.has(font)) {\n                    return;\n                  }\n                  this._fontCache.set(font, faces);\n                  this._cacheUpdated.emit(void 0);\n                  resolve(void 0);\n                })\n                .catch(reject);\n            }\n          }).catch(console.warn);\n        }\n      }\n    }\n\n    let flatFaces = Object.keys(faces).reduce((m, face) => {\n      const foundFaces = faces[face];\n      if (faces && foundFaces != null) {\n        return m.concat(foundFaces);\n      }\n    }, [] as SCHEMA.IFontFacePrimitive[]);\n\n    let styleFaces: any[] = [];\n\n    let globalStyles: SCHEMA.ISettings = {};\n\n    for (let kv of Object.entries(styles)) {\n      let [k, v] = kv;\n      switch (k) {\n        case '@import':\n          imports.push(...(Array.isArray(v) ? v : [v]));\n          break;\n        case '@font-face':\n          styleFaces.push(...(Array.isArray(v) ? v : [v]));\n          break;\n        default:\n          globalStyles[k] = v;\n          break;\n      }\n    }\n\n    return {\n      '@global': globalStyles as any,\n      '@font-face': [flatFaces as any, ...styleFaces],\n      '@import': imports as any,\n    } as SCHEMA.IStyles;\n  }\n\n  dispose() {\n    this._globalStyles.remove();\n    for (let notebook of Array.from(this._notebookStyles.keys())) {\n      this._onDisposed(notebook);\n    }\n  }\n\n  hack(show = true) {\n    if (show) {\n      setTimeout(\n        () =>\n          this.stylesheets.map((s) => {\n            document.body.appendChild(s);\n          }),\n        0\n      );\n    } else {\n      this.stylesheets.map((el) => el.remove());\n    }\n  }\n}\n","import { ICommandPalette } from '@jupyterlab/apputils';\nimport { INotebookTracker, NotebookPanel } from '@jupyterlab/notebook';\nimport { CommandRegistry } from '@lumino/commands';\nimport { Token } from '@lumino/coreutils';\nimport { ISignal } from '@lumino/signaling';\nimport { Menu } from '@lumino/widgets';\n\nimport * as SCHEMA from './schema';\n\nexport type Scope = 'global' | 'notebook';\n\nexport enum TextKind {\n  code = 'code',\n  content = 'content',\n}\n\nexport const KIND_LABELS: { [key in TextKind]: string } = {\n  code: 'Code',\n  content: 'Content',\n};\n\nexport enum FontFormat {\n  woff2 = 'woff2',\n  woff = 'woff',\n}\n\nexport type TFontMimeTypes = { [key in FontFormat]: string };\n\nexport const FONT_FORMATS = {\n  woff2: 'font/woff2',\n  woff: 'font/woff',\n};\n\nexport type TextProperty = 'font-family' | 'font-size' | 'line-height';\n\nexport interface IFontCallback {\n  (): Promise<SCHEMA.IFontFacePrimitive[]>;\n}\n\nexport interface IFontLicense {\n  name: string;\n  spdx: string;\n  text: () => Promise<string>;\n  holders: string[];\n}\n\nexport interface IFontFaceOptions {\n  name: string;\n  faces: IFontCallback;\n  license: IFontLicense;\n}\n\nexport const CMD = {\n  code: {\n    fontSize: 'code-font-size',\n    fontFamily: 'code-font-family',\n    lineHeight: 'code-line-height',\n  },\n  content: {\n    fontSize: 'content-font-size',\n    fontFamily: 'content-font-family',\n    lineHeight: 'content-line-height',\n  },\n  editFonts: 'font-editor:open',\n  customFonts: {\n    disable: 'custom-fonts:disable',\n    enable: 'custom-fonts:enable',\n  },\n};\n\nexport const ROOT = ':root';\n\nexport type ICSSVars = {\n  [key in TextKind]: { [key in TextProperty]: SCHEMA.ICSSOM };\n};\n\nexport const CSS: ICSSVars = {\n  code: {\n    'font-family': '--jp-code-font-family',\n    'font-size': '--jp-code-font-size',\n    'line-height': '--jp-code-line-height',\n  },\n  content: {\n    'font-family': '--jp-content-font-family',\n    'font-size': '--jp-content-font-size1',\n    'line-height': '--jp-content-line-height',\n  },\n};\n\nexport namespace DOM {\n  export const sheet = 'jp-Fonts-Sheet';\n  export const modGlobal = 'jp-fonts-mod-global';\n  export const modNotebook = 'jp-fonts-mod-notebook';\n  export const notebookPanel = 'jp-NotebookPanel';\n  export const cell = 'jp-Cell';\n}\n\nexport type ICSSTextOptions = {\n  [key in TextProperty]: (manager: IFontManager) => SCHEMA.ICSSOM[];\n};\n\nexport const TEXT_OPTIONS: ICSSTextOptions = {\n  'font-size': (_m) => Array.from(Array(25).keys()).map((i) => `${i + 8}px`),\n  'line-height': (_m) => Array.from(Array(8).keys()).map((i) => `${i * 0.25 + 1}`),\n  'font-family': (m) => {\n    let names = Array.from(m.fonts.values()).reduce((memo, f) => {\n      return memo.concat(f.name);\n    }, [] as string[]);\n    names.sort((a, b) => a.localeCompare(b));\n    return names;\n  },\n};\n\nexport type ICSSTextLabels = { [key in TextProperty]: string };\n\nexport const TEXT_LABELS: ICSSTextLabels = {\n  'font-size': 'Size',\n  'line-height': 'Line Height',\n  'font-family': 'Font',\n};\n\nexport const DEFAULT = {\n  code: {\n    fontSize: '13px',\n    lineHeight: '1',\n    fontFamily: '\"Source Code Pro\", monospace',\n  },\n};\n\nexport const PACKAGE_NAME: string = '@deathbeds/jupyterlab-fonts';\nexport const CONFIGURED_CLASS = 'jp-fonts-configured';\n\nexport const IFontManager = new Token<IFontManager>(\n  '@deathbeds/jupyterlab-fonts:IFontManager'\n);\n\nexport interface IFontManagerConstructor {\n  new (\n    commands: CommandRegistry,\n    palette: ICommandPalette,\n    notebooks: INotebookTracker\n  ): IFontManager;\n}\n\nexport interface IFontManager {\n  ready: Promise<void>;\n  registerFontFace(options: IFontFaceOptions): void;\n  licensePaneRequested: ISignal<IFontManager, any>;\n  requestLicensePane(font: any): void;\n  fonts: Map<string, IFontFaceOptions>;\n  stylesheets: HTMLStyleElement[];\n  menu: Menu;\n  getVarName(property: TextProperty, options: ITextStyleOptions): SCHEMA.ICSSOM | null;\n  getTextStyle(\n    property: TextProperty,\n    options: ITextStyleOptions\n  ): SCHEMA.ICSSOM | null;\n  setTextStyle(\n    property: TextProperty,\n    value: SCHEMA.ICSSOM | null,\n    options: ITextStyleOptions\n  ): void;\n  dataURISrc(url: string, format: FontFormat): Promise<string>;\n  setTransientNotebookStyle(panel: NotebookPanel, style: SCHEMA.ISettings | null): void;\n  getTransientNotebookStyle(panel: NotebookPanel): SCHEMA.ISettings | null;\n}\n\nexport interface ITextStyleOptions {\n  kind: TextKind;\n  scope?: Scope;\n  notebook?: NotebookPanel;\n}\n","import { FONT_FORMATS, FontFormat } from './tokens';\n\n/* below from https://gist.github.com/viljamis/c4016ff88745a0846b94 */\nconst CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nexport function base64Encode(str: string): string {\n  let out = '';\n  let i = 0;\n  let len = str.length;\n  let c1: number;\n  let c2: number;\n  let c3: number;\n\n  while (i < len) {\n    c1 = str.charCodeAt(i++) & 0xff;\n    if (i === len) {\n      out += CHARS.charAt(c1 >> 2);\n      out += CHARS.charAt((c1 & 0x3) << 4);\n      out += '==';\n      break;\n    }\n    c2 = str.charCodeAt(i++);\n    if (i === len) {\n      out += CHARS.charAt(c1 >> 2);\n      out += CHARS.charAt(((c1 & 0x3) << 4) | ((c2 & 0xf0) >> 4));\n      out += CHARS.charAt((c2 & 0xf) << 2);\n      out += '=';\n      break;\n    }\n    c3 = str.charCodeAt(i++);\n    out += CHARS.charAt(c1 >> 2);\n    out += CHARS.charAt(((c1 & 0x3) << 4) | ((c2 & 0xf0) >> 4));\n    out += CHARS.charAt(((c2 & 0xf) << 2) | ((c3 & 0xc0) >> 6));\n    out += CHARS.charAt(c3 & 0x3f);\n  }\n  return out;\n}\n\nexport async function dataURISrc(url: string, format = FontFormat.woff2) {\n  const pre = `data:${FONT_FORMATS[format]};charset=utf-8;base64`;\n  const base64Font = base64Encode(await getBinary(url));\n  const post = `format('${format}')`;\n  const src = `url('${pre},${base64Font}') ${post}`;\n  return src;\n}\n\nexport function getBinary(url: string) {\n  return new Promise<string>((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.overrideMimeType('text/plain; charset=x-user-defined');\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === 4 && xhr.status === 200) {\n        resolve(xhr.responseText);\n      }\n    };\n    xhr.send();\n  });\n}\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","NotebookFontsButton","widgetRequested","Signal","this","createNew","panel","context","button","ToolbarButton","icon","onClick","emit","tooltip","metaUpdated","metadata","get","addClass","removeClass","panelModel","model","changed","connect","toolbar","insertItem","DisposableDelegate","disconnect","dispose","ICONS","fonts","LabIcon","name","svgstr","license","options","LicenseViewer","VDomRenderer","constructor","super","Model","render","m","text","licenseText","className","font","VDomModel","_font","stateChanged","_licenseTextPromise","Promise","resolve","reject","then","_licenseText","catch","err","licenseTextPromise","PALETTE","code","content","FontManager","commands","palette","notebooks","licensePaneRequested","_fontFamilyMenus","Map","_fontSizeMenus","_lineHeightMenus","_ready","PromiseDelegate","_stylist","cacheUpdated","settingsUpdate","_commands","_palette","_notebooks","currentChanged","_onNotebooksChanged","makeMenus","makeCommands","hack","ready","promise","enabled","settings","_settings","composite","set","console","warn","menu","_menu","stylesheets","setTransientNotebookStyle","style","getTransientNotebookStyle","async","url","format","registerFontFace","registerFontCommands","getVarName","property","kind","getTextStyle","notebook","styles","varName","rootStyle","value","oldStyles","user","JSON","parse","stringify","root","embedFont","cleanMetadata","Object","keys","length","rawStyle","oldFonts","fontFamily","pattern","indexOf","fontLicenses","unquoted","replace","registered","faces","oldFaces","oldLicenses","spdx","holders","styled","forEach","_registerNotebook","registerNotebook","watcher","_notebookMetaWatcher","disposed","_onNotebookDisposed","meta","stylesheet","fontSizeOptions","Array","from","map","i","fontSizeCommands","prefix","px","label","command","fontSize","toLowerCase","addCommand","execute","oldSize","cfs","parseInt","setTextStyle","isVisible","addItem","category","rank","prop","toUpperCase","slice","isToggled","lineHeight","fontPropMenu","parent","Menu","title","type","submenu","family","height","size","args","global","slug","requestLicensePane","h","SECTION_CLASS","BUTTON_CLASS","DUMMY","FontEditorModel","_fonts","onSettingsChange","_notebook","pathChanged","notebookMetadata","clearNotebookMetadata","fontName","FontEditor","key","header","textSelect","fontFaceExtras","licenseButton","sectionProps","extra","onChange","evt","target","defaultValue","deleteButton","showDialog","body","buttons","Dialog","accept","enabler","checked","setEnabled","currentTarget","embeddedFont","reduce","memo","face","src","kb","contentsModel","h2","PLUGIN_ID","licenseId","autoStart","requires","IMainMenu","ISettingRegistry","ICommandPalette","INotebookTracker","provides","activate","app","settingRegistry","manager","it","closable","shell","add","activateById","settingsMenu","addGroup","editor","currentWidget","mode","fontsButton","docRegistry","addWidgetExtension","all","load","restored","setTimeout","reason","error","RE_CSS_IMPORT","RE_CSS_REL_URL","Stylist","_notebookStyles","_transientNotebookStyles","_jss","_fontCache","_cacheUpdated","_cellStyleCache","_notebookCellCount","_globalStyles","document","createElement","classList","_notebookContentDebouncer","_onNotebookModelContentChanged","register","sheet","modelContentChanged","_debouncedNotebookContentChanged","_onDisposed","invoke","newCellCount","widgets","needsUpdate","cell","node","dataset","jpfCellId","tags","join","jpfCellTags","JSONExt","cached","has","remove","delete","values","clear","jss","css","_nbMetaToStyle","_settingsToStyle","createStyleSheet","toString","transientMeta","trim","cellMeta","_normalizeCSS","textContent","lines","split","finalLines","imports","line","localPath","URLExt","PageConfig","PathExt","match","selector","idStyles","concat","kv","entries","k","v","isArray","rootK","raw","cachedFont","flatFaces","foundFaces","styleFaces","globalStyles","show","s","appendChild","el","TextKind","KIND_LABELS","FontFormat","FONT_FORMATS","woff2","woff","CMD","editFonts","customFonts","disable","enable","ROOT","CSS","DOM","modGlobal","modNotebook","notebookPanel","TEXT_OPTIONS","_m","names","f","sort","a","b","localeCompare","TEXT_LABELS","DEFAULT","PACKAGE_NAME","CONFIGURED_CLASS","IFontManager","Token","CHARS","base64Encode","str","c1","c2","c3","out","len","charCodeAt","charAt","dataURISrc","getBinary","xhr","XMLHttpRequest","open","overrideMimeType","onreadystatechange","readyState","status","responseText","send"],"sourceRoot":""}